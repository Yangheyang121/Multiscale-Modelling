/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package multiscalemodelling;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author hacio
 */
public class MultiscaleModellingFrame extends javax.swing.JFrame {

    int width, height;
    int grains;
    int randomX, randomY;
    boolean play;
    Cell[][] matrix, matrix2;
    Image offScrImg;
    Graphics offScrGraph;

    /**
     * Creates new form MultiscaleMdoellingFrame
     */
    public MultiscaleModellingFrame() {
        
        initComponents();
        play = false;
        offScrImg = createImage(jPanel1.getWidth(), jPanel1.getHeight());
        offScrGraph = offScrImg.getGraphics();
        Timer time = new Timer();
        TimerTask task = new TimerTask() {
            public void run() {
                if (play) {
                    vonNeumann();
                    refresh();
                }

            }
        };
        time.scheduleAtFixedRate(task, 0, 200);
        refresh();
    }

    void refresh() {
        
        offScrGraph.setColor(jPanel1.getBackground());
        offScrGraph.fillRect(0, 0, jPanel1.getWidth(), jPanel1.getHeight());
        for (int i = 0; i < width; i++) {
            for (int j = 0; j < height; j++) {
                if (matrix[i][j].id != -1) {
                    offScrGraph.setColor(matrix[i][j].color);
                    int x = i * jPanel1.getWidth() / width;
                    int y = j * jPanel1.getHeight() / height;
                    offScrGraph.fillRect(x, y, jPanel1.getWidth() / width, jPanel1.getHeight() / height);
                }
            }
        }
        offScrGraph.setColor(Color.LIGHT_GRAY);
        for (int i = 0; i < height; i++) {
            int y = i * jPanel1.getHeight() / height;
            offScrGraph.drawLine(0, y, jPanel1.getWidth(), y);
        }
        for (int i = 0; i < width; i++) {
            int x = i * jPanel1.getWidth() / width;
            offScrGraph.drawLine(x, 0, x, jPanel1.getHeight());
        }
        jPanel1.getGraphics().drawImage(offScrImg, 0, 0, jPanel1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        createButton = new javax.swing.JButton();
        drawButton = new javax.swing.JButton();
        numbersOfGrainsTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(700, 700));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });
        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentResized(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );

        jButton1.setText("Start");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        drawButton.setText("Draw");
        drawButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawButtonActionPerformed(evt);
            }
        });

        numbersOfGrainsTextField.setText("30");
        numbersOfGrainsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numbersOfGrainsTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Numbers of grains:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(createButton)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(numbersOfGrainsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(drawButton)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 143, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(createButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numbersOfGrainsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(drawButton)
                        .addGap(115, 115, 115)
                        .addComponent(jButton1)))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void vonNeumann() {

        for (int i = 0; i < width; i++) {
            for (int j = 0; j < height; j++) {
                if (matrix[i][j].id != -1) {
                    if (i > 0 && i < width - 1 && j > 0 && j < height - 1) {
                        matrix2[i][j] = matrix[i][j];
                        if (matrix[i][j - 1].id == -1) {
                            matrix2[i][j - 1] = matrix[i][j];
                        }
                        if (matrix[i + 1][j].id == -1) {
                            matrix2[i + 1][j] = matrix[i][j];
                        }
                        if (matrix[i][j + 1].id == -1) {
                            matrix2[i][j + 1] = matrix[i][j];
                        }
                        if (matrix[i - 1][j].id == -1) {
                            matrix2[i - 1][j] = matrix[i][j];
                        }
                    }
                }
            }
        }
        change(matrix, matrix2, width, height);
    }

    public void change(Cell[][] a, Cell[][] b, int width, int height) {
        
        for (int i = 0; i < width; i++) {
            for (int j = 0; j < height; j++) {
                a[i][j].color = b[i][j].color;
                a[i][j].id = b[i][j].id;
            }
        }
    }

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked

        int i = width * evt.getX() / jPanel1.getWidth();
        int j = height * evt.getY() / jPanel1.getHeight();

        if (matrix[i][j].id == -1) {
            // matrix[i][j].id = 1;
            // matrix[i][j].color = Cell.randomColor();
            matrix[i][j].color = Cell.randomColor();
            matrix[i][j].id = Cell.idColor(matrix[i][j].color);

        } else if (matrix[i][j].id != -1) {
            matrix[i][j].id = -1;
        }

        refresh();
    }//GEN-LAST:event_jPanel1MouseClicked

    private void jPanel1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentResized

        offScrImg = createImage(jPanel1.getWidth(), jPanel1.getHeight());
        offScrGraph = offScrImg.getGraphics();
        refresh();
    }//GEN-LAST:event_jPanel1ComponentResized

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        
        width = 100;
        height = 100;
        matrix = new Cell[width][height];
        matrix2 = new Cell[width][height];
        for (int i = 0; i < width; i++) {
            for (int j = 0; j < height; j++) {
                matrix[i][j] = new Cell();
                matrix2[i][j] = new Cell();
            }
        }
        refresh();
    }//GEN-LAST:event_createButtonActionPerformed

    private void drawButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawButtonActionPerformed

        Random random = new Random();

        grains = Integer.parseInt(numbersOfGrainsTextField.getText());
        while (grains > 0) {
            randomX = Math.abs(random.nextInt()) % width;
            randomY = Math.abs(random.nextInt()) % height;

            if (matrix[randomX][randomY].id == -1) {
                matrix[randomX][randomY].color = Cell.randomColor();
                matrix[randomX][randomY].id = Cell.idColor(matrix[randomX][randomY].color);
                grains--;
            }

        }
        refresh();
    }//GEN-LAST:event_drawButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        play = !play;
        if (play) {
            jButton1.setText("Stop");
        } else {
            jButton1.setText("Start");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void numbersOfGrainsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numbersOfGrainsTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numbersOfGrainsTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MultiscaleModellingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MultiscaleModellingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MultiscaleModellingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MultiscaleModellingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MultiscaleModellingFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createButton;
    private javax.swing.JButton drawButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField numbersOfGrainsTextField;
    // End of variables declaration//GEN-END:variables
}
